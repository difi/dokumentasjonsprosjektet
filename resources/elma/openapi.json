{
  "openapi": "3.0.0",
  "info": {
    "title": "ELMA REST API",
    "version": ""
  },
  "tags": [
    {
      "name": "Endpoint",
      "description": "Endpoint Controller"
    },
    {
      "name": "Organization",
      "description": "Organization Controller"
    },
    {
      "name": "Participant",
      "description": "Participant Controller"
    },
    {
      "name": "Process",
      "description": "Process Controller"
    }
  ],
  "paths": {
    "/api/endpoints": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get Endpoints",
        "operationId": "getEndpointsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Endpoint_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/endpoints/{endpointId}": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Get Participants at Endpoint",
        "operationId": "getParticipantsUsingGET",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          },
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Participant_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Participant"
        ],
        "summary": "Add Participant to Endpoint",
        "operationId": "addParticipantUsingPOST",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ParticipantDto"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/endpoints/{endpointId}/participants": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Get Participant with identifier scheme::value at Endpoint",
        "operationId": "getParticipantUsingGET",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheme",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Participant"
        ],
        "summary": "Update Participant with identifier scheme::value at Endpoint",
        "operationId": "updateParticipantUsingPUT",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheme",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/ParticipantDto"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Participant"
        ],
        "summary": "Delete Participant with identifier scheme::value from Endpoint",
        "operationId": "deleteParticipantUsingDELETE",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheme",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/endpoints/{endpointId}/participants/processes": {
      "get": {
        "tags": [
          "Participant"
        ],
        "summary": "Get Processes for Participant with identifier scheme::value at Endpoint",
        "operationId": "getProcessesUsingGET_1",
        "parameters": [
          {
            "name": "endpointId",
            "in": "path",
            "description": "Endpoint identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheme",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Process"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/endpoints/{identifier}": {
      "get": {
        "tags": [
          "Endpoint"
        ],
        "summary": "Get Endpoint",
        "operationId": "getEndpointUsingGET",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "description": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Endpoint"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/organizations/processes": {
      "get": {
        "tags": [
          "Organization"
        ],
        "summary": "Get Processes for an Organization",
        "operationId": "getProcessesUsingGET",
        "parameters": [
          {
            "name": "scheme",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Process"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/processes": {
      "get": {
        "tags": [
          "Process"
        ],
        "summary": "Get Supported Processes",
        "operationId": "getProcessesUsingGET_2",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_Process_"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://test-smp.difi.no/"
    }
  ],
  "components": {
    "requestBodies": {
      "ParticipantDto": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ParticipantDto"
            }
          }
        },
        "description": "Participant DTO"
      }
    },
    "schemas": {
      "Capability": {
        "type": "object",
        "properties": {
          "capability": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "processes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Process"
            }
          }
        },
        "title": "Capability"
      },
      "Contact": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          }
        },
        "title": "Contact"
      },
      "ContactDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        },
        "title": "ContactDto"
      },
      "Domain": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "Domain"
      },
      "Endpoint": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "identifier": {
            "type": "string"
          },
          "serviceProvider": {
            "$ref": "#/components/schemas/ServiceProvider"
          },
          "supportContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "Endpoint"
      },
      "Organization": {
        "type": "object",
        "properties": {
          "icd": {
            "type": "string"
          },
          "lastModificationDate": {
            "type": "string",
            "format": "date-time"
          },
          "orgNumber": {
            "type": "string"
          },
          "qualifiedIdentifier": {
            "$ref": "#/components/schemas/QualifiedIdentifier"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          }
        },
        "title": "Organization"
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "paged": {
            "type": "boolean"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "unpaged": {
            "type": "boolean"
          }
        },
        "title": "Pageable"
      },
      "Participant": {
        "type": "object",
        "properties": {
          "contact": {
            "$ref": "#/components/schemas/Contact"
          },
          "endpoint": {
            "$ref": "#/components/schemas/Endpoint"
          },
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "registrationDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "Participant"
      },
      "ParticipantDto": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string"
          },
          "organizationNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "profileIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "contact": {
            "$ref": "#/components/schemas/ContactDto"
          }
        },
        "title": "ParticipantDto"
      },
      "Process": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string"
          },
          "capabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Capability"
            }
          },
          "dependeciesString": {
            "type": "string"
          },
          "dependencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Process"
            }
          },
          "domain": {
            "$ref": "#/components/schemas/Domain"
          },
          "identifier": {
            "type": "string"
          },
          "qualifiedIdentifier": {
            "$ref": "#/components/schemas/QualifiedIdentifier"
          },
          "requiredIcds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restricted": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          }
        },
        "title": "Process"
      },
      "QualifiedIdentifier": {
        "type": "object",
        "properties": {
          "scheme": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "title": "QualifiedIdentifier"
      },
      "ServiceProvider": {
        "type": "object",
        "properties": {
          "domains": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Domain"
            }
          },
          "identifier": {
            "type": "string"
          },
          "technicalContact": {
            "$ref": "#/components/schemas/Contact"
          },
          "title": {
            "type": "string"
          }
        },
        "title": "ServiceProvider"
      },
      "Sort": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        },
        "title": "Sort"
      },
      "Page_Endpoint_": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«Endpoint»"
      },
      "Page_Participant_": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«Participant»"
      },
      "Page_Process_": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Process"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/Pageable"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "title": "Page«Process»"
      }
    }
  }
}